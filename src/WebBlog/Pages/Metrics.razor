@page "/metrics"
@inject BlogService BlogService
@inject WebBlog.AppVersionInfo appInfo

<h2>Metrics</h2>

<p>A page of metrics about me from various services.</p>
<button type="button" @onclick="Save">Save</button>

<div class="post-content">
    <table width="100%">
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Total post views
            </td>
            <td>
                @views
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Total post reactions
            </td>
            <td>
                @reactions
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Total post comments
            </td>
            <td>
                @comments
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Published Posts / Total Posts
            </td>
            <td>
                @pubposts / @posts
            </td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-twitter" aria-hidden="true"></span> Number of Followers
            </td>
            <td>
                @followers.Value (@followers.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-twitter" aria-hidden="true"></span> Number Following
            </td>
            <td>
                @following.Value (@following.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-twitter" aria-hidden="true"></span> Number of Favourites
            </td>
            <td>
                @fav.Value (@fav.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-twitter" aria-hidden="true"></span> Number of Tweets
            </td>
            <td>
                @numtweets.Value (@numtweets.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-github" aria-hidden="true"></span> Number Following
            </td>
            <td>
                @ghfollowing.Value (@ghfollowing.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-github" aria-hidden="true"></span> Number of Followers
            </td>
            <td>
                @ghfollowers.Value (@ghfollowers.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-github" aria-hidden="true"></span> Number of Repos
            </td>
            <td>
                @ghrepo.Value (@ghrepo.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-github" aria-hidden="true"></span> Number of Stars
            </td>
            <td>
                @ghstars.Value (@ghstars.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-github" aria-hidden="true"></span> Number of Commits
            </td>
            <td>
                @commits.Value (@commits.Date?.ToString("dd/MM/yy HH:mm"))
            </td>
        </tr>
    </table>
</div>

@code {
    private Metric followers = new Metric();
    private Metric following = new Metric();
    private Metric numtweets = new Metric();
    private Metric ghfollowers = new Metric();
    private Metric ghfollowing = new Metric();
    private Metric ghrepo = new Metric();
    private Metric ghstars = new Metric();
    private Metric commits = new Metric();
    private Metric fav = new Metric();
    private int views;
    private int reactions;
    private int comments;
    private int pubposts;
    private int posts;

    private List<BlogPosts> blogs;

    protected override async Task OnInitializedAsync()
    {
        blogs = await BlogService.GetBlogsAsync();
        posts = blogs.Count;
        pubposts = blogs.Where(x => x.Published).Count();
        foreach (var item in blogs)
        {
            views += item.Page_Views_Count;
            reactions += item.Positive_Reactions_Count;
            comments += item.Comments_Count;
        }
        Load();
    }

    private void Load()
    {
        followers = BlogService.LoadData(0);
        following = BlogService.LoadData(1);
        numtweets = BlogService.LoadData(2);
        fav = BlogService.LoadData(3);
        ghfollowers = BlogService.LoadData(4);
        ghfollowing = BlogService.LoadData(5);
        ghrepo = BlogService.LoadData(6);
        ghstars = BlogService.LoadData(7);
        commits = BlogService.LoadData(8);
    }

    private async Task Save()
    {
        await BlogService.GetCommits();
        await BlogService.GetTwitterFav();
        await BlogService.GetGitHubStars();
        await BlogService.GetGitHubRepo();
        await BlogService.GetTwitterFollowers();
        await BlogService.GetTwitterFollowing();
        await BlogService.GetNumberOfTweets();
        await BlogService.GetGitHubFollowers();
        await BlogService.GetGitHubFollowing();
        Load();
    }
}