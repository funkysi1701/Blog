@page "/metrics"
@using WebBlog.Data
@inject BlogService BlogService
@inject WebBlog.AppVersionInfo appInfo

<h2>Metrics</h2>

<p>A page of metrics about me from various services.</p>

<div class="post-content">
    <table width="100%">
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Total post views
            </td>
            <td>
                @views
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Total post reactions
            </td>
            <td>
                @reactions
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Total post comments
            </td>
            <td>
                @comments
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-dev" aria-hidden="true"></span> Published Posts / Total Posts
            </td>
            <td>
                @pubposts / @posts
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-twitter" aria-hidden="true"></span> Followers
            </td>
            <td>
                @followers
            </td>
        </tr>
        <tr>
            <td>
                <span class="fab fa-twitter" aria-hidden="true"></span> Following
            </td>
            <td>
                @following
            </td>
        </tr>
    </table>
</div>

@code {
    private int followers;
    private int following;
    private int views;
    private int reactions;
    private int comments;
    private int pubposts;
    private int posts;

    private List<BlogPosts> blogs;

    protected override async Task OnInitializedAsync()
    {
        blogs = await BlogService.GetBlogsAsync();
        posts = blogs.Count;
        pubposts = blogs.Where(x => x.Published).Count();
        foreach (var item in blogs)
        {
            views += item.Page_Views_Count;
            reactions += item.Positive_Reactions_Count;
            comments += item.Comments_Count;
        }
        followers = await BlogService.GetTwitterFollowers();
        following = await BlogService.GetTwitterFollowing();
    }
}