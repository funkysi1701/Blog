@page "/metrics/chart/{type:int}"
@inject BlogService BlogService
@inject MetricService MetricService
@inject IJSRuntime JS
@inject NavigationManager UriHelper

@if (chart != null && chart.Any())
{
    <h2>Chart of @title</h2>
    <div class="text-center">
        <a @onclick="@Prev" @onclick:preventDefault href="#">Prev Chart</a>
        <a @onclick="@Next" @onclick:preventDefault href="#">Next Chart</a>
    </div>
    <Line Labels="@label" Data="@data" Title="@title" Day="false"></Line>
    <Line Labels="@label2" Data="@data2" Title="@title" Day="true"></Line>

}

@code {
    private IList<ChartView> chart;
    private IList<ChartView> chart2;
    private string title;
    private List<string> label = new List<string>();
    private List<decimal> data = new List<decimal>();
    private List<string> label2 = new List<string>();
    private List<decimal> data2 = new List<decimal>();

    [Parameter]
    public int type { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    protected void Prev()
    {
        type = type - 1;
        if (type < 0)
        {
            type = 13;
        }
        UriHelper.NavigateTo("/metrics/chart/" + type, true);

    }
    protected void Next()
    {
        type = type + 1;
        if (type > 13)
        {
            type = 0;
        }
        UriHelper.NavigateTo("/metrics/chart/" + type, true);

    }

    private async Task Load()
    {
        chart = await MetricService.GetChart(type, false);
        foreach (var item in chart.OrderBy(x => x.Date))
        {
            if (item.Total.HasValue)
            {
                label.Add(item.Date);
                data.Add(item.Total.Value);
            }
        }
        chart2 = await MetricService.GetChart(type, true);
        foreach (var item in chart2.OrderBy(x => x.Date))
        {
            if (item.Total.HasValue)
            {
                label2.Add(item.Date);
                data2.Add(item.Total.Value);
            }
        }
        switch (type)
        {
            case 0:
                title = "Twitter Followers";
                break;
            case 1:
                title = "Twitter Following";
                break;
            case 2:
                title = "Number Of Tweets";
                break;
            case 3:
                title = "Twitter Favourites";
                break;
            case 4:
                title = "GitHub Followers";
                break;
            case 5:
                title = "GitHub Following";
                break;
            case 6:
                title = "GitHub Repo";
                break;
            case 7:
                title = "GitHub Stars";
                break;
            case 8:
                title = "GitHub Commits";
                break;
            case 9:
                title = "DevTo Posts";
                break;
            case 10:
                title = "DevTo Published Posts";
                break;
            case 11:
                title = "DevTo Views";
                break;
            case 12:
                title = "DevTo Reactions";
                break;
            case 13:
                title = "DevTo Comments";
                break;
            default:
                title = "Unknown";
                break;
        }
    }
}