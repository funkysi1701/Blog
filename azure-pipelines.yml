# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- script: '(echo $(Build.BuildNumber) && echo $(Build.BuildId)) > .buildinfo.json'
  displayName: "Emit build number"
  workingDirectory: '$(Build.SourcesDirectory)/src/WebBlog'
  failOnStderr: true

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x'
    includePreviewVersions: true

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
    includePreviewVersions: false

- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonaClouds'
    organization: 'funkysi1701'
    scannerMode: 'MSBuild'
    projectKey: 'funkysi1701_Blog'
    projectName: 'Blog'
    projectVersion: '$(Build.BuildId)'

- task: DotNetCoreCLI@2
  displayName: 'Build Web'
  inputs:
    command: 'build'
    projects: 'src/WebBlog/WebBlog.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Running Tests'
  inputs:
    command: 'test'
    arguments: '--no-restore --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'
    projects: 'src/WebBlog.Test/WebBlog.Test.csproj'
    nobuild: true

- task: reportgenerator@4
  inputs:
    reports: '$(Build.SourcesDirectory)\src\WebBlog.Test\coverage.opencover.xml'
    targetdir: '$(Build.SourcesDirectory)\CodeCoverage'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)\CodeCoverage\Cobertura.xml'  

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:SourceRevisionId=$(Build.SourceVersion)'    

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/a/WebBlog.zip'
    artifact: 'web'
    publishLocation: 'pipeline'    

- task: DotNetCoreCLI@2
  displayName: 'Build Func'
  inputs:
    command: 'build'
    projects: 'src/WebBlog.Func/WebBlog.Func.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src/WebBlog.Func/WebBlog.Func.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:SourceRevisionId=$(Build.SourceVersion)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/a/WebBlog.Func.zip'
    artifact: 'func'
    publishLocation: 'pipeline'    

- task: dependency-checker@1
  inputs:
    path: '$(Build.SourcesDirectory)'
    searchRecursive: true
    combineProjects: false
    includePrerelease: false
    useArtifacts: false
    createBadge: false
    createReport: true
    reportPath: '$(Build.ArtifactStagingDirectory)\dependencies.html'
  env:
    SYSTEM_ACCESSTOKEN: $(system.accesstoken)

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'