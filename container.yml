# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Pay-As-You-Go (aa403fbf-410c-4158-9746-9c5f82cfa2dc)'
    azureContainerRegistry: '{"loginServer":"funkysi1701.azurecr.io", "id" : "/subscriptions/aa403fbf-410c-4158-9746-9c5f82cfa2dc/resourceGroups/Containers/providers/Microsoft.ContainerRegistry/registries/funkysi1701"}'
    dockerComposeFile: 'src/docker-compose.yml'
    action: 'Build services'
    additionalImageTags: '$(Build.BuildId)'
    includeSourceTags: true
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Pay-As-You-Go (aa403fbf-410c-4158-9746-9c5f82cfa2dc)'
    azureContainerRegistry: '{"loginServer":"funkysi1701.azurecr.io", "id" : "/subscriptions/aa403fbf-410c-4158-9746-9c5f82cfa2dc/resourceGroups/Containers/providers/Microsoft.ContainerRegistry/registries/funkysi1701"}'
    dockerComposeFile: 'src/docker-compose.yml'
    action: 'Push services'
    additionalImageTags: '$(Build.BuildId)'
    includeSourceTags: true
